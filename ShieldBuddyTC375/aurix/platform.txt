name=Aurduino
version=1.6.18 

# TC375 Version

#C Compiler Settings: free tool chain installation
compiler.path=C:/HighTec/toolchains/tricore/v4.9.3.0-infineon-1.0/bin/

## C Compiler Settings
compiler.c.cmd=tricore-gcc
# Note: these includes must correspond to those in the C compiler options in the Eclipse project
compiler.c.flags= -c -fno-common -Os -g3 -W -Wall -Wextra -Wdiv-by-zero -Warray-bounds -Wcast-align -Wignored-qualifiers -Wformat -Wformat-security -pipe -DTRIBOARD_TC37XA -DUSE_IRQ -DARDUINO_ARCH_AURIX -D__TC37XX__ -include Variant.h -fshort-double -mcpu=tc37xx -mversion-info -I "{runtime.hardware.path}\aurix\variants\tc375\iLLD\Include\Port\Std" -I "{runtime.hardware.path}\aurix\system\libaurix\include\TC375" -I "{runtime.hardware.path}\aurix\variants\tc375\iLLD\Include\Pms\Std" -I "{runtime.hardware.path}\aurix\variants\tc375\iLLD\Infra\Ssw\TC37AED\Tricore" -I "{runtime.hardware.path}\aurix\variants\tc375\iLLD\Include\Scu\Std" -I "{runtime.hardware.path}\aurix\variants\tc375\iLLD\Service\CpuGeneric" -I "{runtime.hardware.path}\aurix\variants\tc375\iLLD\Infra\Platform" -I "{runtime.hardware.path}\aurix\variants\tc375\iLLD\Infra\Sfr\TC37AED\_Reg" -I "{runtime.hardware.path}\aurix\libraries\SoftwareSerial" -I "{runtime.hardware.path}\aurix\libraries\USB_Host_Shield_Library_2.0" -I "{runtime.hardware.path}\aurix\variants\tc375\iLLD\Include\Dma\Std" -I "{runtime.hardware.path}\aurix\libraries\Ethernet\src" -I "{runtime.hardware.path}\aurix\libraries\Ethernet\src\utility" -I "{runtime.hardware.path}\aurix\libraries\Ethernet\src" -I "{runtime.hardware.path}\aurix\cores\aurduino" -I "{runtime.hardware.path}\Sketches" -I "{runtime.hardware.path}\aurix\libraries\EEPROM\src" -I "{runtime.hardware.path}\aurix\libraries\Servo\src" -I "{runtime.hardware.path}\aurix\libraries\Servo\src\aurix" -I "{runtime.hardware.path}\aurix\libraries\MIDI\src" -I "{runtime.hardware.path}\aurix\variants\tc375\iLLD\Include\Scu" -I "{runtime.hardware.path}\aurix\variants\tc375\iLLD\Include\Stm\Std" -I "{runtime.hardware.path}\aurix\variants\tc375\iLLD\Include\Cpu\Irq" -I "{runtime.hardware.path}\aurix\variants\tc375\iLLD\Include\_Lib\DataHandling" -I "{runtime.hardware.path}\aurix\variants\tc375\iLLD\Include\Cpu\Std" -I "{runtime.hardware.path}\aurix\variants\tc375" -I "{runtime.hardware.path}\aurix\cores\aurduino\avr" -I "{runtime.hardware.path}\aurix\libraries\LiquidCrystal" -I "{runtime.hardware.path}\aurix\libraries\SD\src" -I "{runtime.hardware.path}\aurix\libraries\SD\src\utility" -I "{runtime.hardware.path}\aurix\libraries\SPI" -I "{runtime.hardware.path}\aurix\libraries\TFTV2" -I "{runtime.hardware.path}\aurix\libraries\Wire" -I "{runtime.hardware.path}\aurix\variants\tc375\iLLD\Include\_Build" -I "{runtime.hardware.path}\aurix\variants\tc375\iLLD\Include" -I "{runtime.hardware.path}\aurix\system\libaurix\include" -I "{runtime.hardware.path}\aurix\variants\tc375\iLLD\Include\_Impl" -I "{runtime.hardware.path}\aurix\variants\tc375\iLLD\Include\_Lib" -I "{runtime.hardware.path}\aurix\variants\tc375\iLLD\Include\_PinMap" -I "{runtime.hardware.path}\aurix\variants\tc375\iLLD\Include\Asclin" -I "{runtime.hardware.path}\aurix\variants\tc375\iLLD\Include\Ccu6" -I "{runtime.hardware.path}\aurix\variants\tc375\iLLD\Include\Cif" -I "{runtime.hardware.path}\aurix\variants\tc375\iLLD\Include\Cpu" -I "{runtime.hardware.path}\aurix\variants\tc375\iLLD\Include\Dma" -I "{runtime.hardware.path}\aurix\variants\tc375\iLLD\Include\Dts" -I "{runtime.hardware.path}\aurix\variants\tc375\iLLD\Include\Emem" 

compiler.c.extra_flags=
compiler.c.elf.extra_flags=

compiler.cpp.extra_flags=

compiler.ar.extra_flags=
compiler.elf2hex.extra_flags=
	
compiler.ar.cmd=tricore-ar
compiler.ar.flags=rcs

compiler.objcopy.cmd=tricore-objcopy
compiler.objcopy.eep.flags=

compiler.elf2hex.flags=-O ihex
compiler.elf2hex.cmd=tricore-objcopy

compiler.elf2bin.flags=-O binary
compiler.elf2bin.cmd=tricore-objcopy

compiler.ldflags=
compiler.size.cmd=


## Compile c files
recipe.c.o.pattern = "{compiler.path}{compiler.c.cmd}" {compiler.c.flags} {includes} "{source_file}" -o "{object_file}"

## C++ Linker flags
compiler.c.elf.flags=
compiler.c.elf.cmd=tricore-g++


## C++ Compiler Settings
compiler.cpp.cmd=tricore-g++
# Note: these includes must correspond to those in the C compiler options in the Eclipse project
# There must be a space: -I "
compiler.cpp.flags= -c -std=c++14 -fno-common -Os -g3 -W -Wall -Wextra -Wdiv-by-zero -Warray-bounds -Wcast-align -Wignored-qualifiers -Wformat -Wformat-security -pipe -DTRIBOARD_TC37XA -DUSE_IRQ -DARDUINO_ARCH_AURIX -D__TC37XX__ -include Variant.h -fshort-double -mcpu=tc37xx -mversion-info -I "{runtime.hardware.path}\aurix\variants\tc375\iLLD\Include\Port\Std" -I "{runtime.hardware.path}\aurix\system\libaurix\include\TC375" -I "{runtime.hardware.path}\aurix\variants\tc375\iLLD\Include\Pms\Std" -I "{runtime.hardware.path}\aurix\variants\tc375\iLLD\Infra\Ssw\TC37AED\Tricore" -I "{runtime.hardware.path}\aurix\variants\tc375\iLLD\Include\Scu\Std" -I "{runtime.hardware.path}\aurix\variants\tc375\iLLD\Service\CpuGeneric" -I "{runtime.hardware.path}\aurix\variants\tc375\iLLD\Infra\Platform" -I "{runtime.hardware.path}\aurix\variants\tc375\iLLD\Infra\Sfr\TC37AED\_Reg" -I "{runtime.hardware.path}\aurix\libraries\SoftwareSerial" -I "{runtime.hardware.path}\aurix\libraries\USB_Host_Shield_Library_2.0" -I "{runtime.hardware.path}\aurix\variants\tc375\iLLD\Include\Dma\Std" -I "{runtime.hardware.path}\aurix\libraries\Ethernet\src" -I "{runtime.hardware.path}\aurix\libraries\Ethernet\src\utility" -I "{runtime.hardware.path}\aurix\libraries\Ethernet\src" -I "{runtime.hardware.path}\aurix\cores\aurduino" -I "{runtime.hardware.path}\Sketches" -I "{runtime.hardware.path}\aurix\libraries\EEPROM\src" -I "{runtime.hardware.path}\aurix\libraries\Servo\src" -I "{runtime.hardware.path}\aurix\libraries\Servo\src\aurix" -I "{runtime.hardware.path}\aurix\libraries\MIDI\src" -I "{runtime.hardware.path}\aurix\variants\tc375\iLLD\Include\Scu" -I "{runtime.hardware.path}\aurix\variants\tc375\iLLD\Include\Stm\Std" -I "{runtime.hardware.path}\aurix\variants\tc375\iLLD\Include\Cpu\Irq" -I "{runtime.hardware.path}\aurix\variants\tc375\iLLD\Include\_Lib\DataHandling" -I "{runtime.hardware.path}\aurix\variants\tc375\iLLD\Include\Cpu\Std" -I "{runtime.hardware.path}\aurix\variants\tc375" -I "{runtime.hardware.path}\aurix\cores\aurduino\avr" -I "{runtime.hardware.path}\aurix\libraries\LiquidCrystal" -I "{runtime.hardware.path}\aurix\libraries\SD\src" -I "{runtime.hardware.path}\aurix\libraries\SD\src\utility" -I "{runtime.hardware.path}\aurix\libraries\SPI" -I "{runtime.hardware.path}\aurix\libraries\TFTV2" -I "{runtime.hardware.path}\aurix\libraries\Wire" -I "{runtime.hardware.path}\aurix\variants\tc375\iLLD\Include\_Build" -I "{runtime.hardware.path}\aurix\variants\tc375\iLLD\Include" -I "{runtime.hardware.path}\aurix\system\libaurix\include" -I "{runtime.hardware.path}\aurix\variants\tc375\iLLD\Include\_Impl" -I "{runtime.hardware.path}\aurix\variants\tc375\iLLD\Include\_Lib" -I "{runtime.hardware.path}\aurix\variants\tc375\iLLD\Include\_PinMap" -I "{runtime.hardware.path}\aurix\variants\tc375\iLLD\Include\Asclin" -I "{runtime.hardware.path}\aurix\variants\tc375\iLLD\Include\Ccu6" -I "{runtime.hardware.path}\aurix\variants\tc375\iLLD\Include\Cif" -I "{runtime.hardware.path}\aurix\variants\tc375\iLLD\Include\Cpu" -I "{runtime.hardware.path}\aurix\variants\tc375\iLLD\Include\Dma" -I "{runtime.hardware.path}\aurix\variants\tc375\iLLD\Include\Dts" -I "{runtime.hardware.path}\aurix\variants\tc375\iLLD\Include\Emem" 
 
#compiler.cpp.includes=

## Compile c++ files
recipe.cpp.o.pattern = "{compiler.path}{compiler.cpp.cmd}" {compiler.cpp.flags} {includes} "{source_file}" -o "{object_file}"

## Create archives
archive_file_path={build.path}/{archive_file}
recipe.ar.pattern="{compiler.path}{compiler.ar.cmd}" {compiler.ar.flags} "{archive_file_path}" "{object_file}"

compiler.cpp.elf.flags=
compiler.cpp.elf.cmd=tricore-g++

## Combine gc-sections, archives, and objects
recipe.c.combine.pattern="{compiler.path}{compiler.c.elf.cmd}" {compiler.c.elf.flags} -mcpu=tc37xx -nocrt0 "-T{build.variant.path}/{build.ldscript}" "-Wl,-Map,{build.path}/{build.project_name}.map" {compiler.c.elf.extra_flags} -o "{build.path}/{build.project_name}.elf" "-L{build.path}" -Wl,--cref -Wl,--gc-sections -Wl,--start-group {object_files} "{build.variant.path}/{build.variant_system_lib}" "{build.variant.path}/libAurduino.a" "{build.variant.path}/libTrilib.a" "{build.path}/{archive_file}" -Wl,--end-group -Wl,--cref -Wl,--mem-holes -fshort-double  


## Create eeprom
recipe.objcopy.eep.pattern=

## Create hex
recipe.objcopy.hex.pattern="{compiler.path}{compiler.elf2hex.cmd}" {compiler.elf2hex.flags} {compiler.elf2hex.extra_flags} "{build.path}/{build.project_name}.elf" "{build.path}/{build.project_name}.bin"

## Create hex for memtool
# For Windows 10
recipe.objcopy.hex.pattern="{compiler.path}{compiler.elf2hex.cmd}" {compiler.elf2hex.flags} {compiler.elf2hex.extra_flags} "{build.path}/{build.project_name}.elf" "c:/HIGHTEC/ShieldBuddyUpload.hex"
recipe.objcopy.bin.pattern="{compiler.path}{compiler.elf2bin.cmd}" {compiler.elf2bin.flags} "{build.path}/{build.project_name}.elf" "c:/HIGHTEC/ShieldBuddyUpload.bin"

## Compute size
recipe.size.pattern="{compiler.path}{compiler.size.cmd}" -A "{build.path}/{build.project_name}.elf"
recipe.size.regex=/.text/s+([0-9]+).*



# Aurix Uploader tools
# -------------------

# Call Memtool in batch mode

# Not used
tools.memtool.cmd=IMTMEMTOOL
tools.memtool.cmd.windows=imtmemtool.exe
tools.memtool.path=C:/Program Files (x86)/Infineon/Memtool 4.8/

tools.memtool.upload.params.verbose=
tools.memtool.upload.params.quiet=

# Call Memtool in batch mode
#Note: this locked to a tc375 version only as the {build.variant.path} cannot be used to supply the memtool input file
# Triboard target .cfg will need to change once PLS have defined a ShieldBuddy TC375 target file
tools.memtool.upload.pattern="{path}/{cmd}" -c "C:\Program Files (x86)\Arduino\hardware\ShieldBuddyTC375\aurix\variants\tc375\Target\TriBoard_TC37xA_das.cfg" "C:\Program Files (x86)\Arduino\hardware\ShieldBuddyTC375\aurix\variants\tc375\memtoolinp.bat"
# Could we repeat the above command to reset TC375?






